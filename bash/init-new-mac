#!/usr/bin/env bash

if [ ! -d ~/temp ]; then mkdir ~/temp; fi
if [ ! -d ~/bin ]; then mkdir ~/bin; fi
if [ ! -d ~/projects ]; then mkdir ~/projects; fi

INIT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
#echo $INIT_DIR

#install brew
command -v brew >/dev/null 2>&1 || { \
	echo "I require brew, installing"
	/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
}

brew tap caskroom/versions
brew doctor

#install javac
command -v javac >/dev/null 2>&1 || { \
	echo "I require java 8, installing"
	brew cask install java
}

#install maven 3.3.9
command -v mvn > /dev/null 2>&1 || { \
	curl -o ~/temp/maven.zip http://mirrors.koehn.com/apache/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.zip
	unzip ~/temp/maven.zip -d ~/.
	ln -s ~/apache-maven-3.3.9 ~/maven
}

if [ ! -d /Applications/IntelliJ\ IDEA\ CE.app ]; then
	echo "I require intellij, installing"
	brew cask install intellij-idea-ce
fi

#if [ ! -d /Applications/iTerm.app ]; then
#	echo "I require iterm2, installing"
#        brew cask install iterm2
#fi

if [ ! -d /Applications/Screenhero.app ]; then
	echo "I require screenhero for slack"
	brew cask install screenhero
fi

if [ ! -d /Applications/iTerm.app ]; then
        echo "I require iterm2 beta, installing"
        brew cask install iterm2-beta
fi

if [ ! -d /Applications/Slack.app ]; then
        echo "I require slack, installing"
	brew cask install slack
fi

if [ ! -d '/Applications/Google Chrome.app' ]; then
        echo "I require chrome, installing"
       	brew cask install google-chrome
fi

if [ ! -d '/Applications/Google Chrome Canary.app' ]; then
        echo "I require chrome canary, installing"
	brew cask install google-chrome-canary
fi

if [ ! -d '/Applications/Docker.app' ]; then
    echo "I require docker, installing"
    brew cask install docker

    docker pull bde2020/flink-master
    docker pull bde2020/flink-worker
    docker pull elasticsearch
    docker pull wurstmeister/zookeeper
    docker pull cassandra
    docker pull mysql/mysql-server
fi

if [ ! -d '/Applications/DevCenter' ]; then
    echo "I require cassandra datastax devcenter, I WOULD install it but"
    echo "brew cask install --force devcenter"
    echo "returns the following error"
    echo "  Error: sha256 mismatch"
    echo "might work now...    so try it"
fi

if [ ! -d '/Applications/GitHub Desktop.app' ]; then
    brew cask install github-desktop
fi

#install jmeter
command -v jmeter >/dev/null 2>&1 || { \
	echo "I require jmeter, installing"
	brew install jmeter
}


#install jq
command -v jq >/dev/null 2>&1 || { \
	echo "I require jq, installing"
	brew install jq
}

#install emacs
command -v emacs >/dev/null 2>&1 || { \
	echo "I require emacs, installing"
	brew install emacs
}

#install xmlstarlet
command -v xmlstarlet >/dev/null 2>&1 || { \
	echo "I require xmlstarlet, installing"
	brew install xmlstarlet
}

#install tmux
command -v tmux >/dev/null 2>&1 || { \
	echo "I require tmux, installing"
	brew install tmux
}

#install coreutils/greadlink
command -v greadlink >/dev/null 2>&1 || { \
	echo "I require coreutils, installing"
	brew install coreutils findutils
}

#install pip
command -v pip >/dev/null 2>&1 || { \
	echo "I require pip, installing"
	curl -o ~/temp/get-pip.ph https://bootstrap.pypa.io/get-pip.py
	python ~/temp/get-pip.py
}

command -v aws >/dev/null 2>&2 || { \
	echo "I require aws, installing"
	pip install --upgrade --user awscli
}

command -v gpg >/dev/null 2>&2 || { \
	echo "I require gpg, installing"
	brew install gpg
}

if ! brew info bash-completion &>/dev/null ; then echo brew install git && brew install bash-completion; fi


cp $INIT_DIR/.profile ~/.profile

if [ ! -f ~/bin/chfileext ]; then cp $INIT_DIR/chfileext ~/bin/chfileext; fi
if [ ! -f ~/bin/cpmvnrepo ]; then cp $INIT_DIR/cpmvnrepo ~/bin/cpmvnrepo; fi
if [ ! -f ~/bin/fileinfo ]; then cp $INIT_DIR/fileinfo ~/bin/fileinfo; fi
if [ ! -f ~/bin/findJarWithClass ]; then cp $INIT_DIR/findJarWithClass ~/bin/findJarWithClass; fi
if [ ! -f ~/bin/javamvn ]; then cp $INIT_DIR/javamvn ~/bin/javamvn; fi
if [ ! -f ~/bin/mvn ]; then cp $INIT_DIR/mvn ~/bin/mvn; fi
if [ ! -f ~/bin/mvnall ]; then cp $INIT_DIR/mvnall ~/bin/mvnall; fi
if [ ! -f ~/bin/mvncp ]; then cp $INIT_DIR/mvncp ~/bin/mvncp; fi
if [ ! -f ~/bin/mvngencp ]; then cp $INIT_DIR/mvngencp ~/bin/mvngencp; fi
if [ ! -f ~/bin/mvnhome ]; then cp $INIT_DIR/mvnhome ~/bin/mvnhome; fi
if [ ! -f ~/bin/mvnlocalrepo ]; then cp $INIT_DIR/mvnlocalrepo ~/bin/mvnlocalrepo; fi
if [ ! -f ~/bin/mvnlocation ]; then cp $INIT_DIR/mvnlocation ~/bin/mvnlocation; fi
if [ ! -f ~/bin/mvnr ]; then cp $INIT_DIR/mvnr ~/bin/mvnr; fi
if [ ! -f ~/bin/mvnsavecp ]; then cp $INIT_DIR/mvnsavecp ~/bin/mvnsavecp; fi
if [ ! -f ~/bin/netstartgrep ]; then cp $INIT_DIR/netstartgrep ~/bin/netstartgrep; fi
if [ ! -f ~/bin/netstopgrep ]; then cp $INIT_DIR/netstopgrep ~/bin/netstopgrep; fi
if [ ! -f ~/bin/procfile ]; then cp $INIT_DIR/procfile ~/bin/procfile; fi
if [ ! -f ~/bin/rhino ]; then cp $INIT_DIR/rhino ~/bin/rhino; fi
if [ ! -f ~/bin/ripSuperDriveToISO ]; then cp $INIT_DIR/ripSuperDriveToISO ~/bin/ripSuperDriveToISO; fi
if [ ! -f ~/bin/rm-intellij ]; then cp $INIT_DIR/rm-intellij ~/bin/rm-intellij; fi
if [ ! -f ~/bin/rmDSStore ]; then cp $INIT_DIR/rmDSStore ~/bin/rmDSStore; fi
if [ ! -f ~/bin/rme ]; then cp $INIT_DIR/rme ~/bin/rme; fi
